<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<!-- 정적인 파일들을 DispatcherServlet을 거치지 않고 접근할 수 있도록 하는 설정 -->
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/css/**" location="/css/" />
	<resources mapping="/images/**" location="/images/" />
	<resources mapping="/js/**" location="/js/" />
	<resources mapping="/**" location="/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<!-- 스캔 대상 패키지 등록======================================= -->
	<context:component-scan
		base-package="com.my,com.board,com.myplant,com.order,com.product,com.user,com.common" />

	<!-- 파일 업로드 위한 MultipartResolver 설정 ============================== -->
	<!--주의: 빈의 id는 반드시 multipartResolver로 등록해야 한다. 다른 아이디를 주면 DispatcherServlet이 
		MultipartResolver로 인식하질 못한다. -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="defaultEncoding" value="UTF-8" />
		<beans:property name="maxUploadSize" value="-1" />
		<!-- -1로 주면 무제한 업로드 가능 -->
	</beans:bean>

	<beans:bean id="upDir" class="java.lang.String">
		<beans:constructor-arg value="C:/myjava/Upload" />
	</beans:bean>
	<!-- String upDir=new String("C:/myjava/Upload"); -->
	<!-- Interceptor 설정========================================== -->


	<!-- 상품평을 쓰는 리뷰폼 매핑 ==================================== -->
	<view-controller path="/reviewForm"
		view-name="review/reviewForm" />

	<beans:bean
		class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		id="dataSource">
		<beans:property value="oracle.jdbc.driver.OracleDriver"
			name="driverClassName" />
		<beans:property value="jdbc:oracle:thin:@localhost:1521:xe"
			name="url" />
		<!-- 오라클 사용자 이름 -->
		<beans:property name="username" value="seed"/>
		<!-- 오라클 사용자 비밀번호 -->
		<beans:property name="password" value="1234" />
	</beans:bean>

	<!-- <beans:bean class="org.mybatis.spring.SqlSessionFactoryBean"
		id="SqlSessionFactory">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property value="classpath:mybatis-config.xml"
			name="configLocation" />
		<beans:property value="classpath:/mapper/*Mapper.xml"
			name="mapperLocations" />
	</beans:bean> 

	<mybatis-spring:scan
		base-package="com.my.spring.mapper" />-->


</beans:beans>